#!  /bin/bash -w

################
#              #
#   perl.bsh   #
#              #
################


## note too this procedure uses LOTS of memory, so dont ever try this on a "small" server.

## runs best as cut-paste since several steps may FAIL along the way, just run them again (and again)

####  BE SURE TO RUN THE FIRST PART OF interServer setup !  (2019-04-08 - runs standalone)


#           2019-04-08  -- successfully moved from google-docs to github
#           2019-12-11  -- it seems that postfix and mailx are no longer installed by default for use with Mail::Sendmail
#                       https://linuxconfig.org/how-to-install-postfix-on-redhat-8
#                       dnf --assumeyes install postfix mailx ;
#           2020-01-10  -- added perl-Module-Load-Conditional per: https://github.com/openssl/openssl/issues/4417


###  maybe need MariaDB installed first to properly test DBD::mysql?


#   2019-04-04  - moved from googledocs

for installName in                       \
            perl-core                    \
            perl-CPAN                    \
            perl-DBD-mysql               \
            perl-devel                   \
            perl-libxml-perl             \
            perl-Module-Load-Conditional \
            perl-Time-HiRes              \
            gcc                          \
            gcc-c++                      \
            openssl                      \
            openssl-devel                \
            wget                         \
            
 do
    echo '####################################';
    echo "Now installing Perl:  ${installName} !!" ;
    echo '####################################';
    dnf  --assumeyes  install ${installName} ;
done;
         
dnf   --assumeyes   install 'perl(IO::Socket::SSL)'    ;    ##  2015-07-01

exit 1;

###########################################################################################
 
perl -MCPAN -e shell ;     ## click several times, twice at first, then ONCE again after a couple of minutes (updates .bashrc) 
    ##  this need to be done twice...!
cpan ;   ## run once for initialize and testing, hit return over and over

perl -MCPAN -e shell ;   #run once for initialization and testing 
perl -MCPAN -e shell  'o conf prerequisites_policy follow;  '   ;
perl -MCPAN -e shell  'o conf commit'      ;

/usr/bin/cpan    -i   -f  Template::Stash::XS      ;             ## prompts for *TWO* "y" replies (?)
su mark --command "perl -e  'use Template::Stash::XS ; ' ;"             ## TEST TEST TEST TEST TEST TEST TEST ! ! 


/usr/bin/cpan    -i       DBI                      ;   ## 2016-07-24
su mark --command "perl -e  'use DBI ; ' ;"


/usr/bin/cpan    -i       Devel::CheckLib          ;   ## 2019-04-05 - added for DBD::mysql
su mark --command "perl -e  'use Devel::CheckLib ; ' ;"


/usr/bin/cpan    -i       DBD::mysql               ;   ## 2016-07-24
su mark --command "perl -e  'use DBD::mysql ; ' ;"


sudo /usr/bin/cpan    -i       Net::SSLeay               ;            ## prompts for a ‘n’
su mark --command "perl -e  'use Net::SSLeay; ' ;  "

### if URL complains, enter   perl -MCPAN -e shell   o conf commit   ;
### o conf prerequisites_policy follow   ## stop prompting for answers!
### o conf prerequisites_policy ask      ## go back to prompting for answers!

/usr/bin/cpan    -i       CGI                            ;
/usr/bin/cpan    -i       Crypt::Lite                    ;
/usr/bin/cpan    -i       Cwd                            ;
/usr/bin/cpan    -i       Data::Dumper                   ;
/usr/bin/cpan    -i       Data::JavaScript               ;  ## time comsuming....
/usr/bin/cpan    -i       DBI                            ;
/usr/bin/cpan    -i       Devel::CheckLib                ;
/usr/bin/cpan    -i       Exporter                       ;
/usr/bin/cpan    -i       FCGI                           ;
/usr/bin/cpan    -i       File                           ;
/usr/bin/cpan    -i       GD                             ;   ## 2019-12-10
/usr/bin/cpan    -i       HTML::Element                  ;
/usr/bin/cpan    -i       JSON                           ;
/usr/bin/cpan    -i       LWP                            ;
/usr/bin/cpan    -i       Mail::Sendmail                 ;   ## time consuming.....
/usr/bin/cpan    -i       Spreadsheet::ParseExcel        ;
/usr/bin/cpan    -i       Template                       ;
/usr/bin/cpan    -i       Test::More                     ;
/usr/bin/cpan    -i       URI                            ;
/usr/bin/cpan    -i       URI::Escape::JavaScript        ;
/usr/bin/cpan    -i       XML::TreeBuilder               ;
/usr/bin/cpan    -i       XML::Writer                    ;
/usr/bin/cpan    -i       YAML                           ;

exit 1; 

## run this NOT as root:

su mark --command "perl <<EOP2  ;
    use  CGI                        ;
    use  Crypt::Lite                ;
    use  Cwd                        ;
    use  Data::Dumper               ;
    use  Data::JavaScript           ;
    use  DBI                        ;
    use  Devel::CheckLib            ;
    use  DBD::mysql                 ;
    use  Exporter                   ;
    use  FCGI                       ;
    use  File::Basename             ;
    use  File::stat                 ;
    use  HTML::Element              ;
    use  JSON                       ;
    use  LWP                        ;
    use  Net::SSLeay                ;
    use  Template::Stash::XS        ;
    use  Test::More                 ; 
    ################################use  Mail::Sendmail             ;
    use  Spreadsheet::ParseExcel    ;
    use  Template                   ;
    use  URI                        ;
    use  URI::Escape                ;
    use  XML::TreeBuilder           ;
    use  XML::Writer                ;
    use  YAML                       ;
    print  'Test script executes successfully!';
EOP2
"

perl -e  'use   XML::Writer; '   ## to test

perl -MCPAN -e shell ;   #run once for initialization and testing
#
perl -MCPAN -e    'install YAML'   ;
perl -MCPAN -e    'install Exporter'   ;
perl -MCPAN -e    'install CGI'  ;
perl -MCPAN -e    'install Cwd'  ;
perl -MCPAN -e    'install Crypt::Lite' ; ##   (this one was not detected by grep methods because its in a different library)
perl -MCPAN -e    'install DBI' ;
perl -MCPAN -e    'install Data::Dumper' ;
perl -MCPAN -e    'install Data::JavaScript' ;
perl -MCPAN -e    'install URI::Escape::JavaScript'  ;  ##   (this one was not detected)
perl -MCPAN -e    'install File'   ;
###  GD installed from above ###
perl -MCPAN -e    'install  JSON'  ;
perl -MCPAN -e    'install  LWP'  ;
perl -MCPAN -e    'install  Mail::Sendmail'  ;
perl -MCPAN -e    'install  Spreadsheet::ParseExcel'  ;

perl -MCPAN -e    'install  Template'   ;
perl -MCPAN -e    'install URI'  ;
perl -MCPAN -e    'install HTML::ELement'  ;
perl -MCPAN -e    'install XML::TreeBuilder'  ;
perl -MCPAN -e    'install XML::Writer'  ;

perl -e  'use XML::TreeBuilder;  use XML::Writer; '   ## to test

exit 1;


#mkdir  ~/cpan ; cd  ~/cpan;
#wget wget  https://cpan.metacpan.org/authors/id/A/AN/ANDK/CPAN-2.26.tar.gz  ;
#gzip -d * ;
#tar -xvf *;
#cd CPAN*;
#perl Makefile.PL;
#make  &&   make install ;   #make test failed but that does not seem to matter
#
#mkdir  ~/datadumper ; cd  ~/datadumper ;
#wget http://www.cpan.org/modules/by-module/Data/Data-Dumper-2.173.tar.gz  ;
#tar xvzf Data-Dumper-*.tar.gz  ;
#cd Data-Dumper-*    ;
#perl Makefile.PL   ;
#make && make install  ;


##yum --assumeyes  install perl-Time-HiRes ;  ## 2013-05-10
##yum --assumeyes  install expat-devel  ;       ## 2013-05-10
##yum --assumeyes  install perl-libxml-perl;     ## 2013-05-10
##yum  --assumeyes  install  perl-GD ;    ## easiest way to install the perl-gd interface


#########yum --assumeyes   install perl-CPAN;   ### might replace all of below!
###mkdir  ~/cpan;
###cd  ~/cpan;
###wget  http://search.cpan.org/CPAN/authors/id/A/AN/ANDK/CPAN-1.9800.tar.gz   ;
###wget  https://cpan.metacpan.org/authors/id/A/AN/ANDK/CPAN-2.26.tar.gz  ;

###gzip -d *, 
###tar -xvf *;
###cd CPAN*;
###perl Makefile.PL;
###make  &&   make install ;   #make test failed but that does not seem to matter



from westhost server:

require Exporter;
use CGI qw(:standard);$
use CGI::Carp;$
use Cwd;$
use DBI;$
use Data::Dumper;$
use Data::JavaScript;$
use Fcntl qw(:seek);$
use File::Basename;$
use File::Temp qw/tempfile/;;$
use File::stat;$
use GD;$
use HandleDbError;$
use JSON;$
use LWP;$
use Mail::Sendmail;$
use MainLoginScreen;$
use POSIX ":sys_wait_h";$
use Spreadsheet::ParseExcel::Simple;$
use Spreadsheet::ParseExcel;$
use Template;$
use Tie::Handle;$
use Time::localtime;$
use URI::Escape::JavaScript$
use ValidateUser;$
use XML::TreeBuilder ;$
use XML::Writer;$

chown  -R   comptonpeslonline:comptonpeslonline    *
chmod  -R  755   *


#! /bin/bash
#
#
##################################
#                                #
#     webmin / virtualmin        #
#                                #
##################################

### 2016-07-18 - “ulimit” can be manually added to php5.fcgi  (probably php5.cgi as well)
###            ulimit -u 10               ## maximum number of processes
###            ulimit -v 34816          ##   Maximum size per process   (this example 34 megabytes)

## 2019-08-28 - updated to webmin 1.930
## 2020-03-17 - added expect and upgraded to centos-8


##           ! ! ! ! see customization notes here:   ! ! ! ! !
##http://edwardsmark.com/textpattern/articles/133/virtualmin-customizations

###    Dont forget to install   ddos-deflate……….  2016-04-20

WEBMIN_VERSION='1.941'			;
export ROOT_PASSWORD=''			;	## not sure if this is really needed or not, but perl-pam asks for it
export WEBMIN_PASSWORD=virtualminRocks	;	## be sure to change this!   -- this is exported for 'expect' usage.

sudo setenforce permissive ; ## this is a simple workaround but it does not survive reboot! ! !
sudo getenforce ;   ## double-check

###   change /etc/selinux/config
###    ###SELINUX=enforcing
###    SELINUX=permissive

dnf  --assumeyes  update                    ;   ## always good practice!
dnf  --assumeyes  install wget  gcc pam-devel expect      ;

dnf  module  list perl                               ;  ## is this installed by default???
dnf  module  --assumeyes   install perl:5.26         ;  ## thought this was installed by default????
dnf                        install perl-CPAN         ;
dnf          --assumeyes   install perl-open.noarch  ;  ## may or may not be required(?)  

PERL_MM_USE_DEFAULT=1 cpan -i CPAN  ;  ## initialize cpan for first run

expect <(cat <<'END_OF_CPAN_PAM'
	 
	set timeout -1
	
	set UPARROW	\x1B\[A;
	set DOWNARROW	\x1B\[B;
	set SPACE	\x20;
	set RETURN	\x0d;
	 
	spawn /usr/bin/cpan    -i     Authen::PAM   ;   ##   use   cpanm   instead ??????

	expect -re ".*Password.*"
	send -- "${RETURN}"
	#send -- "$env(ROOT_PASSWORD)${RETURN}"
		 		## optionally include the root password here, be careful!
				## i am not sure why leaving the root password out seems to matter?

	expect eof

END_OF_CPAN_PAM
)	## end of setup.sh


###=====  virtualmin/webmin installation ==============

dnf  --assumeyes install  httpd  mod_ssl  ;
systemctl  enable   httpd  ;
systemctl  restart   httpd  ;
systemctl  status    httpd  ;
echo "this is a test" > /var/www/html/index.html ;
echo "visit your domain name now and look for the index.html file results in browser";

firewall-cmd --zone=public --add-port=10000/tcp --permanent  ;  firewall-cmd --reload  ;


###################
#                 #
#     webmin      #
#                 #
###################

mkdir --verbose  /usr/local/webmin/  &&  cd  /usr/local/webmin/ ;
wget   https://prdownloads.sourceforge.net/webadmin/webmin-${WEBMIN_VERSION}.tar.gz ;
gzip -d  ./webmin-${WEBMIN_VERSION}.tar.gz   			;
tar -xvf  ./webmin-${WEBMIN_VERSION}.tar  			;
rm --verbose ./webmin-${WEBMIN_VERSION}.tar   			;
chown  -R  root:root  ./webmin-${WEBMIN_VERSION}		;
cd  ./webmin-${WEBMIN_VERSION}	 				;

chmod --verbose 500   ./setup.sh	;

############sed --in-place  --expression='s/\*-linux/& redhat-linux/'  ./init/module.info  ;
### change line 449 of setup.sh:    https://github.com/webmin/webmin/pull/1218
##  initsupp=`grep "^os_support=" "$srcdir/init/module.info" | sed -e 's/os_support=//g' | grep ${os_type#*-}`
## change ./setup.pl line 529:
###                  print START "exec '$wadir/miniserv.pl' $config_directory/miniserv.conf\n";
###                  print START "perl '$wadir/miniserv.pl' $config_directory/miniserv.conf\n";



expect <(cat <<'END_OF_SETUP_SH'
	 
	set timeout -1
	
	set UPARROW	\x1B\[A;
	set DOWNARROW	\x1B\[B;
	set SPACE	\x20;
	set RETURN	\x0d;
	 
	spawn ./setup.sh   ;
	
	expect -re ".*Config file directory.*"
	send -- "${RETURN}"
			## default: [/etc/webmin]
	 
	expect -re ".*Log file directory.*"
	send -- "${RETURN}"
			## default: [/var/webmin]
	 
	expect -re ".*Full path to perl.*"
	send -- "${RETURN}"
			## (default /usr/bin/perl)
			
	expect -re ".*Web server port.*"
	send -- "${RETURN}"
			## (default 10000)
	 
	expect -re ".*Login name.*"
	send -- "${RETURN}"
			## (default admin)

	expect -re ".*Login password.*"
	send -- "$env(WEBMIN_PASSWORD)${RETURN}"

	expect -re ".*Password again.*"
	send -- "$env(WEBMIN_PASSWORD)${RETURN}"
	
	expect -re ".*Use SSL.*"
	send -- "y${RETURN}"
			##  send 'y'
			
	expect -re ".*Start Webmin at boot time.*"
	send -- "y${RETURN}"
			## send 'y'

expect eof

END_OF_SETUP_SH
)	## end of setup.sh

###   vi /usr/lib/systemd/system/webmin.service ;
###      #PIDFile=/var/webmin/miniserv.pid
###      ExecStartPost=/bin/sh -c 'umask 022; pgrep miniserv > /var/webmin/webmin.pid'

kill -9 $(pgrep miniserv; )  ##  kill the one started by the installation process
systemctl enable webmin.service ;
systemctl stop webmin.service ;    ## just in case....
systemctl status webmin.service ;
systemctl start webmin.service ;
systemctl status webmin.service ;   ## double check





#################
#               #
#  virtualmin   #
#               #
#################

systemctl  stop   firewalld     ;   ### required for virtualmin install ?? 
kill -9 $(pgrep firewalld; )     ;
systemctl  status firewalld     ;

cd ~ ;

curl  http://software.virtualmin.com/gpl/scripts/install.sh  >  ./virtualmin-install.sh  ;
chmod --verbose  500   ./virtualmin-install.sh  ;

expect <(cat <<'END_OF_INSTALL_SH'
	 
	set timeout -1
	
	set UPARROW	\x1B\[A;
	set DOWNARROW	\x1B\[B;
	set SPACE	\x20;
	set RETURN	\x0d;
	 
	spawn ./virtualmin-install.sh  ; 
	
	expect -re ".*Continue.*"
	send -- "y${RETURN}"
	
	expect -re ".*Really Continue.*"
	send -- "y${RETURN}"

	
	expect eof

END_OF_INSTALL_SH
)	## end of virtualmin  install.sh


exit 1;

(note - we may not need “sed: if the symbolic links are set from the php7 install section)
curl  http://software.virtualmin.com/gpl/scripts/install.sh                               \
| sed -e  's/ php-/ php70w-/g; s/ php / php-70w /g; s/ php5/ php70w/g; '   	\
>  install.sh                                                                                                      ;
 chmod 755   ./install.sh  ;
./install.sh  ;  ## this step took a LONG LONG LONG time !  possibly over several hours, believe it or not

/etc/init.d/webmin restart  ;    ## 2015-06-30

exit;  ## 2015-10-15
notice where log files now go (for example)
 ls -ltr  /var/log/virtualmin/comptonpeslonline.com_error_log


====csf firewall ===
http://download.configserver.com/csf/install.txt

https://www.bitronictech.net/knowledgebase/10088/Installing-CSF-on-Webmin.html
In webmin, follow this route:
Webmin > Webmin Configuration > Webmin Modules >
From local file > /etc/csf/csfwebmin.tgz > Install Module
in /etc/csf/csf/conf change the following:
TESTING = “0”
RESTRICT_SYSLOG = "3"    ## on line 69



====  marks virtualmin/webmin  custom setup   ========

System Settings -> Virtualmin Config -> Defaults for new Domains -- and make sure that "Domain name style in username" is set to "Full Domain Name", and that "Include domain name in usernames" is set to "Always".'   (http://www.virtualmin.com/node/22647)

Webmin-->Servers-->PostfixMailServer-->OtherGeneralOptions   - set "Address that receives bcc of each message"


==== mod_qos  2014-03-20  =========

add these two lines to  /etc/httpd/conf/httpd.conf   file:
QS_LocRequestLimitMatch ^/wp-login.php 10
QS_LocRequestPerSecLimitMatch ^/wp-login.php 1




==========to run virtualmin/webmin on an android device:

http://www.webmin.com/mobile.html

http://download.webmin.com/download/virtualmin/virtual-server-mobile-2.3.wbt.gz
1 - Download the appropriate theme package above. If you installed Webmin from an RPM, get the RPM - if from a Debian package, get the theme in the same format.
2 - Login to Webmin, and go to Webmin -> Webmin Configuration -> Webmin Modules.
3 - Install the downloaded file.
4 - Go back to the Webmin Configuration module, and click on Mobile Device Options.
5 - Select the Virtualmin Mobile Theme from the Theme for mobile browsers menu, and click Save.

to install new modules:  (2012-06-10)
http://www.webmin.com/plugins.html
http://www.webmin.com/standard.html
http://www.blogsweek.com/wp-menubar-3-documentation/

==== to restart webmin: =======

 /etc/init.d/webmin (re)start


================ virtualmin ftp =======
ftp username/password:
# adduser -c 'FTP USER Tom' -m tom
# passwd tom

(virtualmin ftp needed this command: -2012-10-11)
cd  /lib/security   ;
ln -s pam_unix.so pam_stack.so  ;
http://fixx.co.za/?p=367
ftp logfiles:  In /var/log/secure (sometimes additional data is in /var/log/messages)





=== virtualmin google mx records ======

http://www.virtualmin.com/node/22464#comment-101604  (2012-06-11)
Choose the virtual server you wish to edit, then go to Server Configuration > DNS Records. At the bottom of the page, choose MX - Mail Server from the select box and then click on 'Create Record of Type'.

Enter the record name, which will be your domain name, leave the cache as default, set the priority according to your mail server requirements (if there is just one mx record then just use 5), in Mail Server Hostname, enter your MX record and then hit Save.

language-800.info	MX - Mail Server	1 ASPMX.L.GOOGLE.COM.	ASPMX.L.GOOGLE.COM
	language-800.info	MX - Mail Server	5 ALT1.ASPMX.L.GOOGLE.COM.	ALT1.ASPMX.L.GOOGLE.COM.
	language-800.info	MX - Mail Server	5 ALT2.ASPMX.L.GOOGLE.COM.	
	language-800.info	MX - Mail Server	10 ASPMX2.GOOGLEMAIL.COM.	
	language-800.info	MX - Mail Server	10 ASPMX3.GOOGLEMAIL.COM.

***notice where log files now go (for example)
 ls -ltr  /var/log/virtualmin/comptonpeslonline.com_error_log


### ARCHIVES:
##wget http://prdownloads.sourceforge.net/webadmin/webmin-1.760.tar.gz ;
##wget http://sourceforge.net/projects/webadmin/files/webmin/1.630/webmin-1.630.tar.gz/download  ;





#cat >   /lib/systemd/system/webmin.service  <<END_OF_WEBMIN_SERVICE ;
#    [Unit]
##    Description=Webmin
#
#    [Service]
#    ExecStart=/etc/webmin/start
#    ExecStop=/etc/webmin/stop
#    Type=forking
#    PIDFile=/var/webmin/miniserv.pid
#
#    [Install]
##    WantedBy=multi-user.target
#END_OF_WEBMIN_SERVICE
#
#ls -l  /lib/systemd/system/webmin.service  ;

#expect <(cat <<'END_OF_CPAN'
#	 
#	set timeout -1
#	
#	set UPARROW	\x1B\[A;
#	set DOWNARROW	\x1B\[B;
#	set SPACE	\x20;
#	set RETURN	\x0d;
#	 
#	spawn  perl -MCPAN -e shell ;
#	
#	expect -re ".*Would you like to configure as much as possible automatically.*"
#	send -- "${RETURN}"
#			## default: [yes]
#
#	expect -re "^cpan\[1]> "
#	send -- "exit${RETURN}"
#
#expect eof
#
#END_OF_CPAN
#)	## end of cpan

